<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig IDIversion="Created by SDI7.2 - 2019-07-08" created="Tue Jan 25 12:25:42 CET 2022" createdBy="Eddie Hartman" modified="Tue Feb 01 09:36:56 CET 2022" modifiedBy="Eddie Hartman" version="7.1.1">
    <Folder name="AssemblyLines">
        <AssemblyLine name="BrukerGruppeSync">
            <ModTime>1643619234274</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[Logger
Mailer
ScriptLib
]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <ModTime>1642763283974</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Read Group file" state="Enabled"/>
                    <Component name="Agresso Stamdata" state="Enabled"/>
                    <Component name="Read Organizations" state="Enabled"/>
                    <Component name="Process Users" state="Enabled"/>
                    <Component name="Set manager and group" state="Enabled"/>
                    <Component name="Display" state="Enabled"/>
                    <Component name="Write to AD" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643619234274</ModTime>
                <Script name="Read Group file">
                    <ModTime>1643407136254</ModTime>
                    <parameter name="script"><![CDATA[groupFile = system.getConnector("GroupFile");
groupFile.initialize(null);
groupFile.selectEntries();

groups = {};
while ((entry = groupFile.getNextEntry()) != null) {
	var line = entry.getString("line");
	var p = line.indexOf(";");
	if (p > 0) {
		groups[line.substring(0,p).trim()] = line.substring(p+1).trim().replaceAll(";", "|");
	}
}

groupFile.terminate();]]></parameter>
                </Script>
                <Connector name="Agresso Stamdata">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643141783739</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643141783739</ModTime>
                        <parameter name="filePath">_data/Stamdata3_FSI_AL.xml</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.XML2</InheritFrom>
                        <parameter name="entry.tag"/>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Read Organizations">
                    <ModTime>1643201870935</ModTime>
                    <parameter name="script"><![CDATA[stamdata = work.clone();
var list = stamdata.getElementsByTagName("Organisation");
var orgs = {};
for(var org in list){
	var mgrs = org.Managers.getChildNodes();
	if (mgrs.getLength() == 0) {
		var mgr = 0;
	} else {
		var mgr = mgrs[0].getValue();
	}
	orgs[org.Id.getValue()] = {
		parent: org.ParentId.getValue(),
		id: org.Id.getValue(),
		manager: mgr,
		name: org.Name.getValue(),
		companycode: org.CompanyCode.getValue(),
		status: org.Status.getValue()
	} 


}]]></parameter>
                </Script>
                <Script name="Process Users">
                    <ModTime>1643619211186</ModTime>
                    <parameter name="script"><![CDATA[// Get all Resource elements from the input XML
var list = stamdata.getElementsByTagName("Resource");
var userCnt = 0;
var users = {}; // For collecting all users
for(var resource in list){
	var userId = resource.ResourceId.getValue();
	users[userId] = {};
	var user = users[userId];
	
	user.ResourceID = userId;
	user.givenName = resource.FirstName.getValue();
	user.sn = resource.Surname.getValue();
	user.SSN = resource.SocialSecurityNumber.getValue();
	
	// Now to gather Employment data
	var otherPostIDs = [];
	var empList = resource.getElementsByTagName("Employment");
	for (var emp in empList) {
		// Collect OtherPostIDs
		var postID = "";
		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		for (var rel in relList) {
			if (rel.@Name == "Ansvar") {
				postID = "Arbeidssted=" + rel.Value.getValue();
				postID += "=" + user.Percentage + "%";
				otherPostIDs.push(postID + "=" + emp.PostIdDescription);
			}
		}
		
		// Only continue with latest main employment
		if (emp.MainPosition.getValue() != "true" || // only the main position
			emp.DateTo.getValue() < user.DateTo) {   // and the latest one (all users have one Main, as far as I could see) 
			continue;
		}
		user.Title = emp.PostCodeDescription.getValue();
		user.Type = emp.EmploymentType.getValue().toUpperCase();
		user.Active = isActive(user);
		user.Percentage = emp.Percentage.getValue();
		user.EmpResourceId = emp.@ResourceId.getValue();
		user.PostIdDescription = emp.PostIdDescription.getValue();
		user.MainPos = emp.MainPosition.getValue();
		user.DateTo = emp.dateTo.getValue();
		user.Percentage = emp.Percentage.getValue();

		// Get department
		var relList = emp.getElementsByTagName("Relation");
		for (var rel in relList) {
			if (rel.@ElementType == "ORGANIZATIONAL_UNIT") {
				user.DepartmentId = rel.Value.getValue();
				user.DepartmentName = rel.Description.getValue();
				user.FromDate = rel.DateFrom.getValue();
				user.ToDate = rel.DateTo.getValue();
			}
		}

		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		for (var rel in relList) {
			if (rel.@Name == "Ansvar") {
				user.Ansvar = rel.Value.getValue();
			} else
			if (rel.@Name == "Organisasjonsenhet") {
				user.Group = rel.Value.getValue();
			}	
		}
	}
	
	user.OtherPostIDs = otherPostIDs.join("=") + "=";

	// Get email addresses
	var addr = resource.getElementsByTagName("Address");
	var emails = addr.EMailList.getChildNodes();
	if (emails.getLength() > 0) {
		user.Mail = emails[0].getValue();
	}

	// Set manager
	var org = orgs[user.DepartmentId];
	if (typeof org == "undefined") {
		log.error("************ Undefined org (" + user.departmentId 
			+ ") for user " + userInfo(user));
	} else {
		user.ManagerId = org.manager;
	}
	
	userCnt++;
}

log.msg("Users read: " + userCnt);]]></parameter>
                </Script>
                <Script name="Set manager and group">
                    <ModTime>1643618701543</ModTime>
                    <parameter name="script"><![CDATA[// We can get manager data now after having processed all users in the previous step
for (var userId in users) {
	var user = users[userId];
	var mgr = users[user.ManagerId];
	
	if (typeof mgr == "undefined") {
//		log.error("************ Undefined manager (" + user.ManagerId 
//			+ ") for user " + userInfo(user));
		continue;
	}
	user.ManagerName = mgr.FirstName + " " + mgr.Surname;
	user.ManagerEmail = mgr.Mail;	
	
	// Now to set the group based on the Group file
	var groupLine = groups["everyone"];
	if (groups[user.Group]) {
		groupLine += "|" + groupLine;
	}
	user.Groups = groupLine;
}]]></parameter>
                </Script>
                <Script name="Display">
                    <ModTime>1643619234274</ModTime>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	if (user.ResourceID != "58464") continue;
	log.msg("\n---------" + entryStr(work.fromJSON(toJson(user))));
}]]></parameter>
                </Script>
                <Script name="Write to AD">
                    <ModTime>1643618847844</ModTime>
                    <parameter name="script"><![CDATA[ad = system.getConnector("ActiveDirectory");
ad.initialize(true);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="BrukerGruppeSync_analysis">
            <ModTime>1643371386561</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[Logger
Mapper
ScriptLib
]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <ModTime>1642763283974</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Read in map" state="Enabled"/>
                    <Component name="Agresso Stamdata" state="Enabled"/>
                    <Component name="Read Organizations" state="Enabled"/>
                    <Component name="Process Users" state="Enabled"/>
                    <Component name="Set more manager info" state="Enabled"/>
                    <Component name="Map to AD" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643371386561</ModTime>
                <Script name="Read in map">
                    <ModTime>1643112140960</ModTime>
                    <parameter name="script">var map = new Mapper("BrukerGruppeSync/mapping_resource.map");</parameter>
                </Script>
                <Connector name="Agresso Stamdata">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643141783739</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643141783739</ModTime>
                        <parameter name="filePath">_data/Stamdata3_FSI_AL.xml</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.XML2</InheritFrom>
                        <parameter name="entry.tag"/>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Read Organizations">
                    <ModTime>1643141900972</ModTime>
                    <parameter name="script"><![CDATA[stamdata = work.clone();
var list = stamdata.getElementsByTagName("Organisation");
var orgs = {};
for(var org in list){
	var mgrs = org.Managers.getChildNodes();
	if (mgrs.getLength() == 0) {
		var mgr = 0;
	} else {
		var mgr = mgrs[0].getValue();
	}
	orgs[org.Id.getValue()] = {
		parent: org.ParentId.getValue(),
		id: org.Id.getValue(),
		manager: mgr,
		name: org.Name.getValue(),
		companycode: org.CompanyCode.getValue()
	} 


}]]></parameter>
                </Script>
                <Script name="Process Users">
                    <ModTime>1643371386561</ModTime>
                    <parameter name="script"><![CDATA[var list = stamdata.getElementsByTagName("Resource");
var users = {};
for(var resource in list){
	var userId = resource.ResourceId.getValue();
	users[userId] = {};
	var user = users[userId];
	
	user.resourceId = userId;
	user.FirstName = resource.FirstName.getValue();
	user.Surname = resource.Surname.getValue();
	user.SocialSecurityNumber = resource.SocialSecurityNumber.getValue();
	orglist = resource.Employments.getChildNodes();
	
	
	// Now to get Title
	var cnt = 0;
	var empList = resource.getElementsByTagName("Employment");
	for (var emp in empList) {
		if (emp.MainPosition.getValue() != "true" || // only the main position
			emp.DateTo.getValue() < user.DateTo) {   // and the latest one (is this correct? 
			continue;
		}
	}
	
	if (cnt < 2) continue;
	log.msg(userInfo(user, " -> " + cnt));
	continue;
	
	
	for (emp in empList) {
		if (emp.MainPosition.getValue() != "true") {
			continue;
		}
		user.Title = emp.PostCodeDescription.getValue();
		user.Type = emp.EmploymentType.getValue();
		user.Percentage = emp.Percentage.getValue();
		user.EmpResourceId = emp.@ResourceId.getValue();
		user.PostIdDescription = emp.PostIdDescription.getValue();
		user.MainPos = emp.MainPosition.getValue();
	}

	// Get email addresses
	var addr = resource.getElementsByTagName("Address");
	var emails = addr.EMailList.getChildNodes();
	if (emails.getLength() > 0) {
		user.Mail = emails[0].getValue();
	}

	// Get department
	var deptList = resource.getElementsByTagName("Relation");
	for (var dept in deptList) {
		if (dept.@ElementType == "ORGANIZATIONAL_UNIT") {
			user.DepartmentId = dept.Value.getValue();
			user.DepartmentName = dept.Description.getValue();
			user.FromDate = dept.DateFrom.getValue();
			user.ToDate = dept.DateTo.getValue();
		}
	}
	
	// Set manager
	var org = orgs[user.DepartmentId];
	if (typeof org == "undefined") {
		log.error("************ Undefined org (" + user.departmentId 
			+ ") for user " + userInfo(user));
	} else {
		user.ManagerId = org.manager;
	}
}]]></parameter>
                </Script>
                <Script name="Set more manager info">
                    <ModTime>1643200014326</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	var mgr = users[user.ManagerId];
	
	if (typeof mgr == "undefined") {
		log.error("************ Undefined manager (" + user.ManagerId 
			+ ") for user " + userInfo(user));
		continue;
	}
	user.ManagerName = mgr.FirstName + " " + mgr.Surname;
	user.ManagerEmail = mgr.Mail;	
}]]></parameter>
                </Script>
                <Script name="Map to AD">
                    <ModTime>1643200016666</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	log.msg(work.fromJSON(toJson(user)));
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="ReadGroupFile">
            <ModTime>1643225032314</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="GroupFile" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <ModTime>1643225032314</ModTime>
                <Connector name="GroupFile">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643225032314</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224921292</ModTime>
                        <parameter name="filePath">_data/GrupperConfig.txt</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <ModTime>1643225032314</ModTime>
                        <parameter name="csvColumns"><![CDATA[Code
DN]]></parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224963233</ModTime>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224866506</ModTime>
                    </AttributeMap>
                    <DeltaSettings>
                        <ModTime>1643224876491</ModTime>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224927182</ModTime>
                        <SchemaItem>
                            <Name>CN=Menyas,OU=Grupper,OU=Adminnett</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>everyone</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224927182</ModTime>
                        <SchemaItem>
                            <Name>CN=Menyas,OU=Grupper,OU=Adminnett</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>everyone</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224866506</ModTime>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643224866506</ModTime>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643224876491</ModTime>
                <Script name="DumpWorkEntry">
                    <ModTime>1643224950998</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
task.dumpEntry(work);
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="ReadResultFile">
            <ModTime>1643634389417</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">Logger</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="ResultFile" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <ModTime>1643225215981</ModTime>
                <Connector name="ResultFile">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643225215981</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225206942</ModTime>
                        <parameter name="filePath">BrukerGruppeSync/ResultFile_220120_02_00.csv</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <ModTime>1643225210938</ModTime>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225215981</ModTime>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225164392</ModTime>
                    </AttributeMap>
                    <DeltaSettings>
                        <ModTime>1643225170680</ModTime>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225164392</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225164392</ModTime>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225164392</ModTime>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643225164392</ModTime>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643634389417</ModTime>
                <Script name="DumpWorkEntry">
                    <ModTime>1643634389417</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
task.dumpEntry(work);
//log.msg(work.ResourceID + " " + work.Groups);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="ReadTypesFile">
            <ModTime>1643228167660</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="ActiveTypes" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="ActiveTypes">
                    <InheritFrom>/Connectors/ActiveTypes</InheritFrom>
                    <ModTime>1643228167660</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <ModTime>1643228167660</ModTime>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643228167660</ModTime>
                <Script name="DumpWorkEntry">
                    <ModTime>1643228173294</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
task.dumpEntry(work);
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="BrukerGruppeSync 20220128 1322">
            <ModTime>1643372499009</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[Logger
Mapper
ScriptLib
]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <ModTime>1642763283974</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Read in map" state="Enabled"/>
                    <Component name="Agresso Stamdata" state="Enabled"/>
                    <Component name="Read Organizations" state="Enabled"/>
                    <Component name="Process Users" state="Enabled"/>
                    <Component name="Set more manager info" state="Enabled"/>
                    <Component name="Map to AD" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643372499009</ModTime>
                <Script name="Read in map">
                    <ModTime>1643112140960</ModTime>
                    <parameter name="script">var map = new Mapper("BrukerGruppeSync/mapping_resource.map");</parameter>
                </Script>
                <Connector name="Agresso Stamdata">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643141783739</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643141783739</ModTime>
                        <parameter name="filePath">_data/Stamdata3_FSI_AL.xml</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.XML2</InheritFrom>
                        <parameter name="entry.tag"/>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Read Organizations">
                    <ModTime>1643201870935</ModTime>
                    <parameter name="script"><![CDATA[stamdata = work.clone();
var list = stamdata.getElementsByTagName("Organisation");
var orgs = {};
for(var org in list){
	var mgrs = org.Managers.getChildNodes();
	if (mgrs.getLength() == 0) {
		var mgr = 0;
	} else {
		var mgr = mgrs[0].getValue();
	}
	orgs[org.Id.getValue()] = {
		parent: org.ParentId.getValue(),
		id: org.Id.getValue(),
		manager: mgr,
		name: org.Name.getValue(),
		companycode: org.CompanyCode.getValue(),
		status: org.Status.getValue()
	} 


}]]></parameter>
                </Script>
                <Script name="Process Users">
                    <ModTime>1643372499009</ModTime>
                    <parameter name="script"><![CDATA[var list = stamdata.getElementsByTagName("Resource");
var users = {};
for(var resource in list){
	var userId = resource.ResourceId.getValue();
	users[userId] = {};
	var user = users[userId];
	
	user.resourceId = userId;
	user.givenName = resource.FirstName.getValue();
	user.sn = resource.Surname.getValue();
	user.SSN = resource.SocialSecurityNumber.getValue();
	
	// Now to get some of the most recent Employment data
	var empList = resource.getElementsByTagName("Employment");
	for (var emp in empList) {
		if (emp.MainPosition.getValue() != "true" || // only the main position
			emp.DateTo.getValue() < user.DateTo) {   // and the latest one (all users have one Main, as far as I could see) 
			continue;
		}
		user.Title = emp.PostCodeDescription.getValue();
		user.Type = emp.EmploymentType.getValue();
		user.Active = isActive(user);
		user.Percentage = emp.Percentage.getValue();
		user.EmpResourceId = emp.@ResourceId.getValue();
		user.PostIdDescription = emp.PostIdDescription.getValue();
		user.MainPos = emp.MainPosition.getValue();
		user.DateTo = emp.dateTo.getValue();

		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		var lastToDate = "";
		for (var rel in relList) {
			if (rel.@Name != "Ansvar" || 
				(rel.ToDate && rel.ToDate.getValue() < lastToDate)) {
				continue;
			}
			if (rel.ToDate) lastToDate = rel.ToDate.getValue();
			user.Ansvar = rel.Value.getValue();
			user.OtherPostIDs = rel.Description.getValue();
		}
	}
	
	// Now for OtherPostIDs
	var otherPostIDs = [];
	for (emp in empList) {
		var postID = "";
		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		for (var rel in relList) {
			if (rel.@Name == "Ansvar") {
				postID = "Arbeidssted=" + rel.Value.getValue();
			} else
			if (rel.@Name == "Arbeidstid pr. uke") {
				postID += "=" + (37.5/new java.lang.Double(rel.Value.getValue().replace(",",".")))*100 + "%";
			}
		}
		otherPostIDs.push(postID + "=" + emp.PostIdDescription);
	}
	user.OtherPostIDs = otherPostIDs.join("=");
	

	// Get email addresses
	var addr = resource.getElementsByTagName("Address");
	var emails = addr.EMailList.getChildNodes();
	if (emails.getLength() > 0) {
		user.Mail = emails[0].getValue();
	}

	// Get department
	var deptList = resource.getElementsByTagName("Relation");
	for (var dept in deptList) {
		if (dept.@ElementType == "ORGANIZATIONAL_UNIT") {
			user.DepartmentId = dept.Value.getValue();
			user.DepartmentName = dept.Description.getValue();
			user.FromDate = dept.DateFrom.getValue();
			user.ToDate = dept.DateTo.getValue();
		}
	}
	
	// Set manager
	var org = orgs[user.DepartmentId];
	if (typeof org == "undefined") {
		log.error("************ Undefined org (" + user.departmentId 
			+ ") for user " + userInfo(user));
	} else {
		user.ManagerId = org.manager;
	}
}]]></parameter>
                </Script>
                <Script name="Set more manager info">
                    <ModTime>1643203740661</ModTime>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	var mgr = users[user.ManagerId];
	
	if (typeof mgr == "undefined") {
//		log.error("************ Undefined manager (" + user.ManagerId 
//			+ ") for user " + userInfo(user));
		continue;
	}
	user.ManagerName = mgr.FirstName + " " + mgr.Surname;
	user.ManagerEmail = mgr.Mail;	
}]]></parameter>
                </Script>
                <Script name="Map to AD">
                    <ModTime>1643367577415</ModTime>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	if (user.resourceId != "58464") continue;
	log.msg(entryStr(work.fromJSON(toJson(user))));
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="BrukerGruppeSync 20220131 0930">
            <ModTime>1643408572123</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[Logger
Mapper
ScriptLib
]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <ModTime>1642763283974</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Read Group file" state="Enabled"/>
                    <Component name="Agresso Stamdata" state="Enabled"/>
                    <Component name="Read Organizations" state="Enabled"/>
                    <Component name="Process Users" state="Enabled"/>
                    <Component name="Set manager and group" state="Enabled"/>
                    <Component name="Map to AD" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643408572123</ModTime>
                <Script name="Read Group file">
                    <ModTime>1643407136254</ModTime>
                    <parameter name="script"><![CDATA[groupFile = system.getConnector("GroupFile");
groupFile.initialize(null);
groupFile.selectEntries();

groups = {};
while ((entry = groupFile.getNextEntry()) != null) {
	var line = entry.getString("line");
	var p = line.indexOf(";");
	if (p > 0) {
		groups[line.substring(0,p).trim()] = line.substring(p+1).trim().replaceAll(";", "|");
	}
}

groupFile.terminate();]]></parameter>
                </Script>
                <Connector name="Agresso Stamdata">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643141783739</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643141783739</ModTime>
                        <parameter name="filePath">_data/Stamdata3_FSI_AL.xml</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.XML2</InheritFrom>
                        <parameter name="entry.tag"/>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Read Organizations">
                    <ModTime>1643201870935</ModTime>
                    <parameter name="script"><![CDATA[stamdata = work.clone();
var list = stamdata.getElementsByTagName("Organisation");
var orgs = {};
for(var org in list){
	var mgrs = org.Managers.getChildNodes();
	if (mgrs.getLength() == 0) {
		var mgr = 0;
	} else {
		var mgr = mgrs[0].getValue();
	}
	orgs[org.Id.getValue()] = {
		parent: org.ParentId.getValue(),
		id: org.Id.getValue(),
		manager: mgr,
		name: org.Name.getValue(),
		companycode: org.CompanyCode.getValue(),
		status: org.Status.getValue()
	} 


}]]></parameter>
                </Script>
                <Script name="Process Users">
                    <ModTime>1643408554871</ModTime>
                    <parameter name="script"><![CDATA[var list = stamdata.getElementsByTagName("Resource");
var users = {};
for(var resource in list){
	var userId = resource.ResourceId.getValue();
	users[userId] = {};
	var user = users[userId];
	
	user.ResourceID = userId;
	user.givenName = resource.FirstName.getValue();
	user.sn = resource.Surname.getValue();
	user.SSN = resource.SocialSecurityNumber.getValue();
	
	// Now to get some of the most recent Employment data
	var empList = resource.getElementsByTagName("Employment");
	for (var emp in empList) {
		if (emp.MainPosition.getValue() != "true" || // only the main position
			emp.DateTo.getValue() < user.DateTo) {   // and the latest one (all users have one Main, as far as I could see) 
			continue;
		}
		user.Title = emp.PostCodeDescription.getValue();
		user.Type = emp.EmploymentType.getValue();
		user.Active = isActive(user);
		user.Percentage = emp.Percentage.getValue();
		user.EmpResourceId = emp.@ResourceId.getValue();
		user.PostIdDescription = emp.PostIdDescription.getValue();
		user.MainPos = emp.MainPosition.getValue();
		user.DateTo = emp.dateTo.getValue();
		user.Percentage = emp.Percentage.getValue();

		// Get department
		var relList = emp.getElementsByTagName("Relation");
		for (var rel in relList) {
			if (rel.@ElementType == "ORGANIZATIONAL_UNIT") {
				user.DepartmentId = rel.Value.getValue();
				user.DepartmentName = rel.Description.getValue();
				user.FromDate = rel.DateFrom.getValue();
				user.ToDate = rel.DateTo.getValue();
			}
		}

		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		for (var rel in relList) {
			if (rel.@Name == "Ansvar") {
				user.Ansvar = rel.Value.getValue();
			} else
			if (rel.@Name == "Organisasjonsenhet") {
				user.Group = rel.Value.getValue();
			}	
		}
	}
	
	// Now for OtherPostIDs
	var otherPostIDs = [];
	for (emp in empList) {
		var postID = "";
		// Get Ansvar
		var relList = emp.Relations.getChildNodes();
		for (var rel in relList) {
			if (rel.@Name == "Ansvar") {
				postID = "Arbeidssted=" + rel.Value.getValue();
				postID += "=" + user.Percentage + "%";
				otherPostIDs.push(postID + "=" + emp.PostIdDescription);
			}
		}
	}
	user.OtherPostIDs = otherPostIDs.join("=") + "=";

	// Get email addresses
	var addr = resource.getElementsByTagName("Address");
	var emails = addr.EMailList.getChildNodes();
	if (emails.getLength() > 0) {
		user.Mail = emails[0].getValue();
	}

	// Set manager
	var org = orgs[user.DepartmentId];
	if (typeof org == "undefined") {
		log.error("************ Undefined org (" + user.departmentId 
			+ ") for user " + userInfo(user));
	} else {
		user.ManagerId = org.manager;
	}
}]]></parameter>
                </Script>
                <Script name="Set manager and group">
                    <ModTime>1643407124305</ModTime>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	var mgr = users[user.ManagerId];
	
	if (typeof mgr == "undefined") {
//		log.error("************ Undefined manager (" + user.ManagerId 
//			+ ") for user " + userInfo(user));
		continue;
	}
	user.ManagerName = mgr.FirstName + " " + mgr.Surname;
	user.ManagerEmail = mgr.Mail;	
	
	// Now to set the group based on the Group file
	var groupLine = groups["everyone"];
	if (groups[user.Group]) {
		groupLine += "|" + groupLine;
	}
	user.Groups = groupLine;
}]]></parameter>
                </Script>
                <Script name="Map to AD">
                    <ModTime>1643408572123</ModTime>
                    <parameter name="script"><![CDATA[for (var userId in users) {
	var user = users[userId];
	if (user.ResourceID != "58464") continue;
	log.msg(entryStr(work.fromJSON(toJson(user))));
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestMail">
            <ModTime>1643634655489</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[Logger
ScriptLib
Mailer]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Test" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1643634655489</ModTime>
                <Script name="Test">
                    <ModTime>1643634655489</ModTime>
                    <parameter name="script"><![CDATA[var args = {
	hostname: getProperty("smtp.hostname"),
	port: getPropertyInt("smtp.port"),
	ssl: getPropertyBoolean("smtp.ssl"),
	username: getProperty("smtp.username"),
	password: getProperty("smtp.password")
}
//log.msg("Using args: " + toJson(args));
mail = new Mailer(args);

mail.send({
	//to: "knut.haug@storfolloikt.no; eddie.hartman@storfolloikt.no",
	//to: "eddie.hartman@storfolloikt.no",
	to: "anders.birkenes@storfolloikt.no",
	from: "tdi@storfolloikt.no",
	subject: "Test Email",
	body: "BrukerGruppeSync/MailTemplate.html",
	contentType: "text/html",
	attachments: "solution.properties"
})]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="ReadStamData">
            <ModTime>1643634126316</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Agresso Stamdata" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <ModTime>1643634126316</ModTime>
                <Connector name="Agresso Stamdata">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1643634126316</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">_data/Stamdata3_FSI_AL.xml</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.XML2</InheritFrom>
                        <ModTime>1643634026444</ModTime>
                        <parameter name="entry.tag">Resource</parameter>
                        <parameter name="xpath.expr">ExportInfo/Resources</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643634126315</ModTime>
                        <SchemaItem>
                            <Name>Addresses</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Address</Name>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EMailCopyList</Name>
                                    <SchemaItem>
                                        <Name>string</Name>
                                        <Syntax>java.lang.String</Syntax>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EMailList</Name>
                                    <SchemaItem>
                                        <Name>string</Name>
                                        <Syntax>java.lang.String</Syntax>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Assistant</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Home</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Pager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telex</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telefax</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>ZipCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>CountryCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Province</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Place</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Street</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Position</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Contact</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Type</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>AddressId</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Birthdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CompanyCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DateFrom</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DateTo</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employments</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Employment</Name>
                                <SchemaItem>
                                    <Name>TotalLastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SequenceNo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SequenceRef</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateTo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateFrom</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Relations</Name>
                                    <SchemaItem>
                                        <Name>Relation</Name>
                                        <SchemaItem>
                                            <Name>LastUpdate</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>SequenceNo</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>SequenceRef</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>DateTo</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>DateFrom</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Description</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Value1</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Value</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>WageRule</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SeniorityDate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Rates</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SalaryPerYears</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostCodeDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostIdDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostId</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Percentage</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>MainPosition</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EmploymentTypeDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EmploymentType</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>FirstName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastUpdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Municipal</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OvertimeYtd</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Rates</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Relations</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Relation</Name>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateTo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateFrom</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Description</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Value1</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Value</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ResourceId</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ResourceType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Sex</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ShortName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SocialSecurityNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Status</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Surname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>TotalLastUpdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>User</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>ResourceId</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>DomainInfo</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>UbwUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1643634126316</ModTime>
                        <SchemaItem>
                            <Name>Addresses</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Address</Name>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EMailCopyList</Name>
                                    <SchemaItem>
                                        <Name>string</Name>
                                        <Syntax>java.lang.String</Syntax>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EMailList</Name>
                                    <SchemaItem>
                                        <Name>string</Name>
                                        <Syntax>java.lang.String</Syntax>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Assistant</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Home</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Pager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telex</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telefax</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>ZipCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>CountryCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Province</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Place</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Street</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Position</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Contact</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Type</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>AddressId</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Birthdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CompanyCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DateFrom</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DateTo</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Dim4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employments</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Employment</Name>
                                <SchemaItem>
                                    <Name>TotalLastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SequenceNo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SequenceRef</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateTo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateFrom</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Relations</Name>
                                    <SchemaItem>
                                        <Name>Relation</Name>
                                        <SchemaItem>
                                            <Name>LastUpdate</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>SequenceNo</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>SequenceRef</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>DateTo</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>DateFrom</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Description</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Value1</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                        <SchemaItem>
                                            <Name>Value</Name>
                                            <Syntax>java.lang.String</Syntax>
                                        </SchemaItem>
                                    </SchemaItem>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>WageRule</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SeniorityDate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Rates</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>SalaryPerYears</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostCodeDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostIdDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>PostId</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Percentage</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>MainPosition</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EmploymentTypeDescription</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>EmploymentType</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>FirstName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastUpdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Municipal</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OvertimeYtd</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Rates</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Relations</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>Relation</Name>
                                <SchemaItem>
                                    <Name>LastUpdate</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateTo</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>DateFrom</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Description</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Value1</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Value</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </SchemaItem>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ResourceId</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ResourceType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Sex</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ShortName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SocialSecurityNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Status</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Surname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>TotalLastUpdate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>User</Name>
                            <Syntax>com.ibm.di.entry.Attribute</Syntax>
                            <SchemaItem>
                                <Name>ResourceId</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>DomainInfo</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>UbwUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer"/>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    </Folder>
    <Folder name="Connectors">
        
    <Connector name="GroupFile">
            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
            <ModTime>1643405933990</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405915675</ModTime>
                <parameter name="filePath">_data/GrupperConfig.txt</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>system:/Parsers/ibmdi.LineReader</InheritFrom>
                <ModTime>1643405933990</ModTime>
                <parameter name="characterSet">UTF-8</parameter>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </AttributeMap>
            <DeltaSettings>
                <ModTime>1643405869542</ModTime>
                <WhenToCommit>After every database operation</WhenToCommit>
                <RowLocking>SERIALIZABLE</RowLocking>
                <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405862739</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643405869834</ModTime>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
    <Connector name="ActiveDirectory">
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1643619091651</ModTime>
            <ConnectorMode>Update</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643619091651</ModTime>
                <parameter name="ldapPassword">@SUBSTITUTE{property.BrukerGruppeSync:ad.password}</parameter>
                <parameter name="ldapUrl">@SUBSTITUTEldap://{property.BrukerGruppeSync:ad.url}:{property.BrukerGruppeSync:ad.port}</parameter>
                <parameter name="ldapUsername">@SUBSTITUTE{property.BrukerGruppeSync:ad.username}</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </AttributeMap>
            <DeltaSettings/>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618810241</ModTime>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <ModTime>1643618822165</ModTime>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
    </Folder>
    <Folder name="Parsers"/>
    <Folder name="Scripts">
        <Script name="Logger">
            <ModTime>1643111271611</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[_VRS = "20220125 1228"; // Initial version

var Logger = function() {
	this.alName = task.getShortName();
	this.errorLog = null;
	
	// Initialization method - prints out version
	this.init = function() {
		this.msg("Logger v" + _VRS);
	}
	
	// Function to log out a message
	this.msg = function(lvl, msg) {
		// Check if no parameter were passed, or only one
		if (typeof lvl == "undefined") {
			lvl = "INFO";
			msg = "";
		} else
		if (typeof msg == "undefined") {
			msg = lvl;
			lvl = "INFO";
		}
		
		task.logmsg(lvl, msg);
	}
	
	// For logging errors
	this.error = function(msg) {
		this.msg("ERROR", msg);
		
		if (this.errorLog == null) {
			this.errorLog = system.openFileForOutput("logs/" + this.alName + "_error.log");
		}
		
		this.errorLog.write(msg);
		this.errorLog.newLine();
		this.errorLog.flush();
	}
	
	// Init code
	this.init();
}

var log = new Logger();]]></parameter>
        </Script>
        <Script name="Mapper">
            <ModTime>1643226056614</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Must load Logger before this script!!

_VRS = "20220125 1255"; // Initial version

var Mapper = function(mappingFileName) {
	this.mappingFileName = mappingFileName || null;
	this.map = {};
	
	// Initialization method - prints out version
	this.init = function() {
		log.msg("Mapper v" + _VRS);
		
		this.readInMappingFile();
	}
	
	// Reads in the mapping file
	this.readInMappingFile = function() {
		if (this.mappingFileName == null) {
			throw "No mapping file specified in constructor to Mapper";
		}
		
		//Read mapping file
		var file = system.openFileForInput(this.mappingFileName);
		this.map = {};
		while((line = file.readLine()) != null) {
			var parts = line.split("=");
			if (parts.length == 2) {
				this.map[parts[0].trim()] = parts[1].trim();
			}
		}
		file.close();
	}
	
	// Init code
	this.init();
}]]></parameter>
        </Script>
    <Script name="ScriptLib">
            <ModTime>1643624207687</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Must include AFTER Logger in an AL!!

_VRS = "20200126 1301"; // First implementation

log.msg("ScriptLib v" + _VRS);

function userInfo(user, msg) {
	var str = user.resourceId + ": " + user.FirstName + " " + user.Surname;
	if (typeof msg != "undefined" && msg) {
		str += " - " + msg;
	}
	return str;
}

function entryStr(entry) {
	var attNames = entry.getAttributeNames();
	java.util.Arrays.sort(attNames);
	var str = "\n";
	for (var name in attNames) {
		str += " " + name + ": " + entry[name] + "\n";
	}
	return str;
}

function getProperty(propName) {
	return system.getTDIProperty(propName);
}

function getPropertyInt(propName) {
	var prop = system.getTDIProperty(propName);
	return system.toInt(prop);
}

function getPropertyBoolean(propName) {
	return (system.getTDIProperty(propName) || "").toLowerCase() != "false";
}

_TYPE_CODES = null;
function isActive(user) {
	if (!_TYPE_CODES) {
		// Read in the ActiveTypes.txt file and set the two global variables above
		_TYPE_CODES = {
			active: (getProperty("user.type.active") || "").toUpperCase(),
			inactive: (getProperty("user.type.inactive") || "").toUpperCase()
		};
	}
	
	if (_TYPE_CODES.active.indexOf(user.Type) >= 0) {
		return true;
	} else 
	if (_TYPE_CODES.inactive.indexOf(user.Type) >= 0) {
		return false;
	} else {
		throw "Invalid type code (" + user.Type + ") for user " + userInfo(user);
	}
}]]></parameter>
        </Script>
    <Script name="Mailer">
            <ModTime>1643627280385</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Mailer is used to send emails
//
// The argument 'args' can hold the following properties:
//		o hostname 	- SMTP hostname
//		o port		- SMTP port (default is 25)
//		o ssl		- true/false if SSL is enabled (default = true)
//		o username	- username credential for SMTP server
//		o password 	- password credential for SMTP server
//
// Main method is: send()
//    where attachments is either a string or bytearray, or an array of either
//
var Mailer = function(args) {
	this.vrs = "20220131 0927"; // Initial version
	
	this.hostname = args.hostname || "* NOT SPECIFIED *";
	this.port = args.port || 25;
	this.ssl = (typeof args.ssl == "undefined") ? true : !String(args.ssl).equalsIgnoreCase("false");
	this.username = args.username || "* NOT SPECIFIED *";
	this.password = args.password || "* NOT SPECIFIED *";
	
	// Method to send an email
	// Valid args properties are:
	//    o to			- to address
	//	  o from		- from address
	//	  o subject		- subject line
	//	  o body		- body, either text or a filepath
	//	  o contentType	- content type of the body, default is 'text'
	//	  o attachments	- optional filepath or array of filepaths to attach to email
	this.send = function(args) {
		var toAddress = args.toAddress || args.to || "* NOT SPECIFIED *";
		if (!(toAddress instanceof Array)) {
			if (toAddress.indexOf(";")) {
				toAddress = system.splitString(toAddress, ";");
			} else {
				toAddress = [toAddress];
			}	
		}
		var fromAddress = args.fromAddress || args.from || "* NOT SPECIFIED *";
		var subject = args.subject || "* NOT SPECIFIED *";
		var body = args.body || "* NOT SPECIFIED *";
		var contentType = args.contentType || args.contenttype || null;
		var attachments = args.attachments || args.attachment || [];
		if (!(attachments instanceof Array) || attachments.toString().startsWith("[B@")) {
			attachments = [attachments];
		}
		
		this.log("@@@@@ Sending mail to  " + toAddress + ": " + subject + "...");
		    		
		// Get system properties
		var properties = java.lang.System.getProperties();
		
		// Setup mail server
		properties.setProperty("mail.smtp.host", this.hostname);
		properties.setProperty("mail.smtp.port", String(this.port));
		properties.setProperty("mail.smtp.ssl.enable", this.ssl);
		properties.setProperty("mail.smtp.auth", "true");
		properties.setProperty("mail.smtp.socketFactory.port", String(this.port));
		properties.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		var session = javax.mail.Session.getInstance(properties);
		
		// Used to debug SMTP issues
		//session.setDebug(true);
		try {
		    // Create a default MimeMessage object.
		    var message = new javax.mail.internet.MimeMessage(session);
		    // Set From: header field of the header.
		    message.setFrom(new javax.mail.internet.InternetAddress(fromAddress));
		    // Set To: header field of the header.
		    for (var i = 0; i < toAddress.length; i++) {
			    message.addRecipient(javax.mail.Message.RecipientType.TO, new javax.mail.internet.InternetAddress(toAddress[i].trim()));
		    }
		    // Set Subject: header field
		    message.setSubject(subject);

		    // Now set the actual message
		    // If there are attachments, then a bit more work
		    if (attachments.length == 0) {
			    if (contentType) {
				    message.setContent(this.loadBody(body), contentType);
			    } else {
				    message.setText(this.loadBody(body));
			    }
		    } else {
		    	var messageBodyPart = new javax.mail.internet.MimeBodyPart();
			    if (contentType) {
				    messageBodyPart.setContent(this.loadBody(body), contentType);
			    } else {
				    messageBodyPart.setText(this.loadBody(body));
			    }
			    var multiPart = new javax.mail.internet.MimeMultipart();
		    	multiPart.addBodyPart(messageBodyPart);
			    
			    for (var i = 0; i < attachments.length; i++) {
			    	var thisAtt = attachments[i];
			    	var source = new javax.activation.FileDataSource(thisAtt);
			    	messageBodyPart = new javax.mail.internet.MimeBodyPart();
			    	messageBodyPart.setDataHandler(new javax.activation.DataHandler(source));
			    	messageBodyPart.setFileName(thisAtt);
			    	multiPart.addBodyPart(messageBodyPart);
			    }
			    
			    message.setContent(multiPart);
		    }
		    message.saveChanges();      // don't forget this
		    
		    var tr = session.getTransport("smtp");
		    tr.connect(this.hostname, this.username, this.password);
		    tr.sendMessage(message, message.getAllRecipients());
			tr.close();

		    this.log("Sent message successfully!");
		} catch ( mex) {
		    this.log("WARN", "Error sending mail - " + mex);
		}		
	}
	
	// If body passed is a filename, then load the file and return it.
	// Otherwise return the body argument value
	this.loadBody = function(body) {
		var file = new java.io.File(body);
		if (file.exists()) {
			file = system.openFileForInput(body);
			var buf = new java.lang.StringBuilder();
			var line = null;
			while ((line = file.readLine()) != null) {
				buf.append(line + "\n");
			}
			file.close();
			return buf.toString();
		}
		
		return body;
	}
	
	// Local log function
	this.log = function(lvl, msg, throwit) {
		throwit = throwit || false;
		
		if (typeof lvl == "undefined") {
			msg = "";
			lvl = "INFO";
		} else
		if (typeof msg == "undefined") {
			msg = lvl;
			lvl = "INFO";
		}
		
		log.msg(lvl, "[Mailer] " + msg);
		
		if (throwit) throw "[Mailer] " + msg;
	}

	// Initialization method
	this.initialize = function() {
		this.log("v" + this.vrs);
	} 

	
	// Initialization code below this point
	
	this.initialize();	

	return this; // Always return *this*
}]]></parameter>
        </Script>
        <Script name="ScriptLib 20220131 0930">
            <ModTime>1643228250929</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Must include AFTER Logger in an AL!!

_VRS = "20200126 1301"; // First implementation

log.msg("ScriptLib v" + _VRS);

function userInfo(user, msg) {
	var str = user.resourceId + ": " + user.FirstName + " " + user.Surname;
	if (typeof msg != "undefined" && msg) {
		str += " - " + msg;
	}
	return str;
}

function entryStr(entry) {
	var attNames = entry.getAttributeNames();
	java.util.Arrays.sort(attNames);
	var str = "\n";
	for (var name in attNames) {
		str += " " + name + ": " + entry[name] + "\n";
	}
	return str;
}

_TYPE_CODES = null;
function isActive(user) {
	if (!_TYPE_CODES) {
		// Read in the ActiveTypes.txt file and set the two global variables above
		_TYPE_CODES = {};
		var typesFile = system.getConnector("ActiveTypes");
		typesFile.initialize(null);
		typesFile.selectEntries();
		var e = null;
		while ((e = typesFile.getNextEntry()) != null) {
			var parts = system.splitString(e.getString("line").trim(), ":");
			if (parts.length == 2)
			_TYPE_CODES[parts[0].toLowerCase()] = parts[1];
		}
		typesFile.terminate();
	}
	
	if (_TYPE_CODES.active.indexOf(user.Type) >= 0) {
		return true;
	} else 
	if (_TYPE_CODES.inactive.indexOf(user.Type) >= 0) {
		return false;
	} else {
		throw "Invalid type code (" + user.Type + ") for user " + userInfo(user);
	}
}]]></parameter>
        </Script>
    </Folder>
    <JavaLibraries/>
    <JavaProperties/>
    <Folder name="Includes"/>
    <Folder name="Config">
        <LogConfig name="Logging"/>
        <InstanceProperties name="AutoStart">
            <AutoStart/>
        </InstanceProperties>
        <TombstonesConfig name="Tombstones"/>
        <SolutionInterface name="SolutionInterface">
            <ModTime>1643109988742</ModTime>
            <InstanceID>BrukerGruppeSync</InstanceID>
            <enabled>true</enabled>
        </SolutionInterface>
    </Folder>
    <Folder name="Functions"/>
    <Folder name="AttributeMaps"/>
    <Properties name="Properties">
        <Stores>
            <PropertyStore name="Solution-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Solution-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Global-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Global-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="System-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">System-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Java-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">@SUBSTITUTE{config.$directory}/BrukerGruppeSync.properties</parameter>
                    <parameter name="collectionType">Java-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="BrukerGruppeSync">
                <ModTime>1643618082069</ModTime>
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">BrukerGruppeSync/BrukerGruppeSync.properties</parameter>
                    <parameter name="collectionType">BrukerGruppeSync</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
        </Stores>
    </Properties>
    <Folder name="Schedules">
        <Scheduler name="Test">
            <ModTime>1643635065058</ModTime>
            <parameter name="SchedulerType">0</parameter>
            <parameter name="StartTimes">* * * * 0 0</parameter>
        </Scheduler>
    </Folder>
    <Folder name="Sequences"/>
</MetamergeConfig>